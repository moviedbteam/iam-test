# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# SONAR TOKEN créé

name: CI with Sonar Cloud

on:
  push:
    branches: [ "develop" ]

jobs:
#  quality-gates:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#      with:
#        fetch-depth: 0
#    - name: Set up JDK 17
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#        cache: maven
#    - name: Sonar Cloud Analysis
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#      run: mvn verify sonar:sonar

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Create env file
        run: |
          echo "${{ secrets.ENV_FILE_IAM }}" > ./src/main/resources/env.properties

############ GENERE L'ARTEFACT (JAR) ##################################
#      - name: Build with Maven
#        run: mvn compile
#      - name: Package with maven
#        run: mvn package
#      - run: mkdir artifact && cp target/*.jar artifact
#      - uses: actions/upload-artifact@v3
#        with:
#          name: test-iam-V0
#          path: artifact

      - name: Publish package
        run: mvn --batch-mode deploy -X
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}